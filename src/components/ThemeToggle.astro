<theme-toggle>
  <button
    id="theme-toggle"
    class="relative p-2 w-16 h-8 rounded-full bg-gray-300 dark:bg-gray-700 transition-all"
    aria-pressed="false"
  >
    <!-- Slider Background -->
    <span
      class="absolute inset-0 rounded-full bg-gray-600 dark:bg-gray-400 transition-all"
    ></span>

    <!-- Sliding knob -->
    <span
      class="knob absolute top-1/2 transform -translate-y-1/2 bg-white w-6 h-6 rounded-full shadow transition-all duration-300"
    ></span>
  </button>
</theme-toggle>

<script>
  class ThemeToggle extends HTMLElement {
    constructor() {
      super();
      const button = this.querySelector("#theme-toggle");
      const knob = button.querySelector(".knob");

      // Function to toggle the theme
      const setTheme = (dark) => {
        if (dark) {
          document.documentElement.classList.add("dark");
          localStorage.setItem("theme", "dark");
        } else {
          document.documentElement.classList.remove("dark");
          localStorage.setItem("theme", "light");
        }
        button.setAttribute("aria-pressed", dark.toString());

        // Move the knob based on theme
        if (dark) {
          knob.classList.add("translate-x-full"); // Move knob to the right
        } else {
          knob.classList.remove("translate-x-full"); // Move knob to the left
        }
      };

      // Toggle the theme on button click
      button.addEventListener("click", () => {
        const darkModeEnabled =
          document.documentElement.classList.contains("dark");
        setTheme(!darkModeEnabled);
      });

      // Initialize the theme based on localStorage or default to light
      const currentTheme = localStorage.getItem("theme") || "light";
      setTheme(currentTheme === "dark");
    }
  }

  // Define the custom element
  customElements.define("theme-toggle", ThemeToggle);
</script>
